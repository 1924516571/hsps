import {
	ApiConfig,
	Get,
	QueryPostArgs,
	QueryGetArgs,
	QueryGetParams,
	Post,
	QueryPostParams,
	Query
} from "../src/query";

@Query({
	host: "http://localhost:3333",
	prefix: "",
	autoPrefix: true
})
export class Api {

	host?: string;
	prefix?: string;

	constructor(config?: ApiConfig) {
		if(config)
		{
			this.host = config.host;
			this.prefix = config.prefix;
		}
	}

	@Get({
		url: '/rest/get',
		format(data = {}) {
			data.format = 3;
			return data;
		}
	}, (data = {}) => {
		data.format = 2;
		return data;
	})
	get(args?: QueryGetParams): any {

	}

	@Get("/rest/get", (data = {}) => {
		data.format = 2;
		return data;
	})
	get1(args?: QueryGetArgs<Object>): any {

	}

	@Get((data = {}) => {
		data.format = 2;
		return data;
	})
	get2(args?: QueryGetArgs<Object>): any {
		return '/rest/get';
	}

	@Get()
	get3(args?: QueryGetArgs<Object>): any {
		return '/rest/get';
	}

	@Get('/rest/get')
	get4(args?: QueryGetArgs<Object>): any {

	}

	@Get("/rest/get/{userId}")
	getUserDetail(args?: QueryGetArgs<Object>): any {

	}

	@Post({
		url: '/rest/post',
		format(data = {}) {
			data.format = 3;
			return data;
		},
	}, (data: any = {}) => {
		data.format = 2;
		return data;
	})
	post(args?: QueryPostParams<Object, Object>): any {

	}

	@Post()
	post2(): any {
		return "/rest/post";
	}


}
