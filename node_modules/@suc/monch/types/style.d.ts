import type Feature from 'ol/Feature';
import type { Options as FillInterface } from 'ol/style/Fill';
import type { Options as StrokeInterface } from 'ol/style/Stroke';
import type { Options as IconInterface } from 'ol/style/Icon';
import type { Options as CircleInterface } from 'ol/style/Circle';
import type { Options as TextInterface } from 'ol/style/Text';
import type {Options as RegularShapeInterface} from 'ol/style/RegularShape'
import Geometry from 'ol/geom/Geometry';
import type {GeometryFunction} from 'ol/style/Style'

interface IconStyle {
    icon: IconInterface
}

interface CircleStyle {
    circle: CircleInterface
}

interface RegularShapeStyle {
    regularshape: RegularShapeInterface
}

export interface Style {
    geometry?: string | Geometry | GeometryFunction,
    fill?: FillInterface,
    stroke?: StrokeInterface,
    image?: IconStyle | CircleStyle | RegularShapeStyle,
    text?: TextInterface,
    zIndex?: number
}

export type StyleFunction = (feature: Feature, resolutions: number) => Style | Style[] | void

export type StyleLike = Style | Style[] | StyleFunction;
