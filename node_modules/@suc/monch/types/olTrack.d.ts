import Vue, { VNode } from 'vue';
import { Style } from './style';

export interface TrackPoint {
    name?: string, // 节点名称
    lon: number,  // 节点经度
    lat: number,  // 节点纬度
    direction: number,  // 节点旋转角度
    time: string,  // 节点对应的时间点
    speed: number  // 节点速度
}

export type PointData = TrackPoint&{coords:[number, number]};

export interface ImgStyle {
    img: string;
    imgSize: number[];
    anchor?: number[];
}

export declare class OlTrack extends Vue {
    /**
     * 轨迹播放基于哪个图层的渲染事件，要求该图层永远在视图内并且层级最高
     * @default 0
     */
    layerIndex: number;
    /**
     * 点位集合
     * @default []
     */
    points: Array<TrackPoint>;
    /**
     * 主体（车辆）当前所在节点的序号
     * @default 0
     */
    curIndex?: number;
    /**
     * 主体（车辆）当前所在节点与开始时间相差的毫秒数
     * @default 0
     */
    curTime?: number;
    /**
     * 节点图片样式
     */
    node: ImgStyle;
    /**
     * 主体（车辆）图片样式
     */
    marker: ImgStyle;
    /**
     * 轨迹线样式
     * @default {
                        stroke: {
                            color: '#2058A5',
                            width: 4
                        }
                    }
     */
    lineStyle?: Style;
    /**
     * 节点显示的最小层级
     * @default 14
     */
    nodeShow?: number;
    /**
     * 播放速度
     * @default 1
     */
    speed?: number;
    /**
     * 轨迹主体最大速度，间距过大，轨迹不真实，用虚线表现  单位 m/s
     * @default 34
     */
    maxSpeed?: number;
    /**
     * 是否需要插值计算
     * @default false
     */
    isInterpolate?: boolean;
    /**
     * 插值最大时间间隔，间隔过大性能太低 单位分钟
     * @default 2
     */
    maxMinutes?: boolean;
    /**
     * 默认交互：鼠标悬浮在节点上，显示节点时间；若想移除该交互，则设置 overLabel 为 'none'
     */
    overLabel?: string;
    /**
     * 图层层级
     * @default 0
     */
    zIndex?: number;
    /**
     * 输入输出数据采用的坐标系
     * @default EPSG:4326
     */
    projection?: string;

    /**
     * 播放
     */
    play():void;
    /**
     * 暂停
     */
    pause():void;
    /**
     * 停止
     */
    stop():void;

    $scopedSlots: {
        'default': (props:{selectPoint:PointData|null}) => VNode[]
    }
}
