import Vue from 'vue'
import {Coordinate} from 'ol/coordinate';
import { PanOptions, PanIntoViewOptions } from 'ol/Overlay';
import OverlayPositioning from 'ol/OverlayPositioning';

export declare class OlOverlay extends Vue {
    /**
     * 弹框地理坐标
     */
    position: Coordinate;
    /**
     * 弹框地理坐标对应的坐标系
     * @default EPSG:4326
     */
    projection?: string;
    /**
     * Set the overlay id. The overlay id can be used with the module:ol/Map~Map#getOverlayById method.
     */
    id?: string|number;
    /**
     * 弹框类目
     */
    category?: string;
    /**
     * Offsets in pixels used when positioning the overlay.
     * The first element in the array is the horizontal offset.
     * A positive value shifts the overlay right.
     * The second element in the array is the vertical offset.
     * A positive value shifts the overlay down.
     * @default [0, 0]
     */
    offset?: number[];
    /**
     * Defines how the overlay is actually positioned with respect to its position property.
     * Possible values are 'bottom-left', 'bottom-center', 'bottom-right', 'center-left', 'center-center',
     * 'center-right', 'top-left', 'top-center', and 'top-right'.
     * @default top-left
     */
    positioning?: OverlayPositioning;
    /**
     * Whether event propagation to the map viewport should be stopped.
     * If true the overlay is placed in the same container as that of the controls (CSS class name
     * ol-overlaycontainer-stopevent);
     * if false it is placed in the container with CSS class name specified by the className property.
     * @default true
     */
    stopEvent?: boolean;
    /**
     * Whether the overlay is inserted first in the overlay container, or appended.
     * If the overlay is placed in the same container as that of the controls (see the stopEvent option)
     * you will probably set insertFirst to true so the overlay is displayed below the controls.
     * @default true
     */
    insertFirst?: boolean;
    /**
     * Pan the map when calling setPosition, so that the overlay is entirely visible in the current viewport?
     * If true (deprecated), then autoPanAnimation and autoPanMargin will be used to determine the panning parameters;
     * if an object is supplied then other parameters are ignored.
     * @default false
     */
    autoPan?: PanIntoViewOptions|boolean;
    /**
     * The margin (in pixels) between the overlay and the borders of the map when autopanning.
     * Deprecated and ignored if autoPan is supplied as an object.
     * @default 20
     */
    autoPanMargin?: number;
    /**
     * The animation options used to pan the overlay into view. This animation is only used when autoPan is enabled.
     * A duration and easing may be provided to customize the animation. Deprecated and ignored if autoPan is supplied
     * as an object.
     */
    autoPanAnimation?: PanOptions;
    /**
     * @default ol-overlay-container ol-selectable
     */
    className?: string;
    /**
     * 加载时是否清除其他弹框 默认清除
     * @default true
     */
    single?: boolean;
}
