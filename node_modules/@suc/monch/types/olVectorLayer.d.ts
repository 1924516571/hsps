import Vue, {VNode} from "vue";
import {Extent} from "ol/extent";
import {OrderFunction} from "ol/render";
import {StyleLike} from "./style";

export interface EventInfoInterface {
    coords:number[],    // 事件发生处的坐标
    projection: 'EPSG:4326'|'pixel'|'xkcd-image',  // 坐标的坐标系
    [key:string]: any   // 矢量上携带的属性
}

export declare class OlVectorLayer extends Vue {
    className?: string;
    opacity?: number;
    visible?: boolean;
    extent?: Extent;
    zIndex?: number;
    /**
     *  The minimum resolution (inclusive) at which this layer will be visible.
     */
    minResolution?: number;
    /**
     *  The maximum resolution (exclusive) below which this layer will be visible.
     */
    maxResolution?: number;
    /**
     *  The minimum view zoom level (exclusive) above which this layer will be visible.
     */
    minZoom?: number;
    /**
     *  The maximum view zoom level (inclusive) at which this layer will be visible.
     */
    maxZoom?: number;
    renderOrder?: OrderFunction;
    renderBuffer?: number;
    declutter?: boolean;
    layerStyle?: StyleLike;
    updateWhileAnimating?: boolean;
    updateWhileInteracting?: boolean;
    name?: string;

    /**
     * 鼠标悬浮在矢量图层时触发
     */
    $emit(eventName: 'pointermove', moveFeature: EventInfoInterface): this;
    /**
     * 鼠标点击矢量图层时触发
     */
    $emit(eventName: 'singleclick', selectFeature: EventInfoInterface): this;

    /**
     * 作用域插槽
     */
    $scopedSlots: {
        'event': (props:{moveFeature: EventInfoInterface|null, selectFeature: EventInfoInterface|null}) => VNode[]
    }
}
