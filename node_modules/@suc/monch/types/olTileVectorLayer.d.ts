import Vue, { VNode } from 'vue';
import type Projection from 'ol/proj/Projection';
import { EventInfoInterface } from './olLayer';
import type VectorTileLayer from 'ol/layer/VectorTile';
import {StyleLike} from './style';

interface UrlSource {
    url: string,
    format: string,
    [key: string]: any
}

interface UrlFunctionSource {
    tileUrlFunction: (tileCoord: number[], ratio: number, projection: Projection) => string,
    format: string,
    [key: string]: any
}

export interface OlLayerOptions {
    name: string,
    source?: UrlSource | UrlFunctionSource,
    opacity?: number,  // 图层透明度
    visible?: boolean,  // 图层可见性
    [key: string]: any
}

export declare class OlTileVectorLayer extends Vue {
    /**
     * 图层配置项
     */
    options?: OlLayerOptions;
    /**
     * Optional property that will be assigned as the feature id and removed from the properties. layers.
     * MVT format 的一个参数，用来识别 feature
     * @default id
     */
    idProperty?: string;
    /**
     * 图层样式
     */
    layerStyle?: StyleLike;
    /**
     * 图层悬浮样式
     */
    moveStyle?: StyleLike;
    /**
     * 图层选中样式
     */
    clickStyle?: StyleLike;
    /**
     * 点击空白处是否设置 selectFeature=null，进而关闭相关 overlay
     * @default true
     */
    blankClear?: boolean;
    /**
     * 鼠标点击矢量图层时触发
     */
    $emit(eventName: 'layer-created', layer: VectorTileLayer): this;
    /**
     * 鼠标悬浮在矢量图层时触发
     */
    $emit(eventName: 'pointermove', moveFeature: EventInfoInterface): this;
    /**
     * 鼠标点击矢量图层时触发
     */
    $emit(eventName: 'singleclick', selectFeature: EventInfoInterface): this;

    /**
     * 作用域插槽
     */
    $scopedSlots: {
        'default': (props:{moveFeature: EventInfoInterface|null, selectFeature: EventInfoInterface|null}) => VNode[]
    }
}
