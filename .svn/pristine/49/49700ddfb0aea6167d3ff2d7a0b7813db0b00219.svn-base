<template>
  <transition name="dialog-fade">
    <div>
      <el-dialog :append-to-body="true" :title="title" :visible.sync="modal" :close-on-click-modal="true" :before-close="onCancel">
        <el-form class="form" :model="formParams" ref="jqForm" label-width="auto" size="small" :rules="rules">
          <div>
            <el-form-item label="应用名称:" prop="appname">
              <suc-input v-model="formParams.appname" style="width: 100%" placeholder="请输入应用名称"></suc-input>
            </el-form-item>
            <el-form-item label="作用域:" prop="scope">
              <suc-select v-model="formParams.scope" :options="scopData" :config="{ placeholder: '请选择作用域', clearable: true }" style="width:100%"></suc-select>
            </el-form-item>
            <el-form-item label="令牌时效(秒):">
              <suc-input type="number" v-model="formParams.accessTokenValidity" style="width: 100%" placeholder="请输入令牌时效"></suc-input>
            </el-form-item>
            <el-form-item label="是否自动授权:" prop="autoapprove">
              <suc-select v-model="formParams.autoapprove" :options="sqOptions" :config="{ placeholder: '请选择是否自动授权', clearable: true }" style="width:100%"></suc-select>
            </el-form-item>
            <el-form-item label="状态:">
              <el-switch
                class="mySwitch"
                v-model="formParams.isenable"
                @change="onChangeButtonStaus"
                :active-value="statusStore.active"
                :inactive-value="statusStore.inactive"
                active-color="#66b1ff"
                active-text="正常"
                inactive-text="锁定"
              >
              </el-switch>
            </el-form-item>
            <el-form-item label="授权类型:" prop="authorizedGrantTypes">
              <suc-select
                v-model="formParams.authorizedGrantTypes"
                :options="authorizedGrantOptions"
                :config="{ placeholder: '请选择授权类型', clearable: true, multiple: true }"
                style="width:260%"
                @on-change="changeAuthType"
              ></suc-select>
            </el-form-item>
            <el-form-item label="附加信息:">
              <suc-input type="textarea" v-model="formParams.additionalInformation" style="width: 260%" placeholder="请输入附加信息"></suc-input>
            </el-form-item>
          </div>
          <div>
            <el-form-item label="应用描述:">
              <suc-input v-model="formParams.appdesc" style="width: 100%" placeholder="请输入应用描述"></suc-input>
            </el-form-item>
            <el-form-item label="回调地址:">
              <suc-input v-model="formParams.webServerRedirectUri" style="width: 100%" placeholder="请输入回调地址"></suc-input>
            </el-form-item>
            <el-form-item label="刷新时效 (秒):">
              <suc-input type="number" v-model="formParams.refreshTokenValidity" style="width: 100%" placeholder="请输入刷新时效"></suc-input>
            </el-form-item>
            <el-form-item label="权限:">
              <suc-input v-model="formParams.authorities" style="width: 100%" placeholder="请输入权限id"></suc-input>
            </el-form-item>
            <el-form-item label="排序:">
              <suc-input v-model="formParams.itsort" style="width: 100%" placeholder="请输入排序"></suc-input>
            </el-form-item>
          </div>
        </el-form>
        <div slot="footer">
          <el-button @click="onCancel">取 消</el-button>
          <el-button :loading="loading" type="primary" @click="onOk">确 定</el-button>
        </div>
      </el-dialog>
    </div>
  </transition>
</template>
<script lang="ts">
import { Vue, Component, Prop, Emit, Watch } from "vue-property-decorator";
import { SucModal, SucForm, SucFormItem, SucInput, SucSelect, SucDatePicker } from "@suc/ui";
import { validateIdNo } from "@/utils/validator.js";
import { SelectConfig, SelectOptions, InputConfig } from "@suc/ui/interfaces";
@Component({
  components: {
    SucModal,
    SucForm,
    SucFormItem,
    SucInput,
    SucSelect,
    SucDatePicker,
  },
})
export default class ProtectHouseModal extends Vue {
  @Prop() title!: string;
  @Prop() modal!: boolean;
  loading: boolean = false;
  rules: any = {
    appname: [{ required: true, message: "请输入应用名称", trigger: "blur" }],
    scope: [{ required: true, message: "请选择作用域", trigger: "change" }],
    autoapprove: [{ required: true, message: "请选择自动授权", trigger: "change" }],
    authorizedGrantTypes: [{ required: true, message: "请选择授权类型", trigger: "change" }],
    idCard: [{ required: true, trigger: "blur", validator: validateIdNo }],
  };
  @Prop({ type: Object, default: () => {} })
  formParams!: any; //新增接口需要的参数
  statusStore: any = {
    active: true,
    inactive: false,
  };
  @Emit()
  toggle(val: boolean) {
    return val;
  }
  @Emit()
  onSubmit() {}
  onCancel() {
    this.toggle(false);
    (this.$refs["jqForm"] as any).resetFields();
  }
  // 作用域问题
  scopData: any = [{ label: "ALL", value: "all" }];
  // 是否自动授权
  sqOptions: any = [
    { label: "自动授权", value: "true" },
    { label: "不自动授权", value: "false" },
  ];
  authorizedGrantOptions: any = [
    { label: "授权码模式", value: "authorization_code" },
    { label: "密码模式", value: "password" },
    { label: "刷新Token", value: "refresh_token" },
    { label: "简化模式", value: "implicit" },
    { label: "客户端模式", value: "client_credentials" },
  ];
  onChangeButtonStaus(val: any) {}
  changeAuthType(val: any) {
    console.log(val, "33");
    // if (this.formParams && this.formParams.authorizedGrantTypes) {
    //   this.formParams.authorizedGrantTypes = val.join(",");
    //   console.log(this.formParams.authorizedGrantTypes,"????");
    // }
  }
  //  图片大小限制
  async beforeUpload(file: any) {
    let types = ["image/jpeg", "image/jpg", "image/png"];
    const isImage = types.includes(file.type);
    if (!isImage) {
      this.$message.error("上传图片只能是 JPG、JPEG、PNG 格式!");
    }
    const isLt2M = file.size / 1024 / 1024 < 5; //这里做文件大小限制
    if (!isLt2M) {
      this.$message.error("上传图片大小不能超过5MB!");
      return isLt2M;
    }
  }
  PicSuccess(file: any) {
    console.log("file", file);
    this.formParams.minIoFileList.push({ fileName: file.data.object, fileId: file.data.fileId, fileType: file.data.fileType, oldName: file.data.oldName });
  }
  // //限制上传图片的数量
  // handleExceed(files: any) {
  //   this.$message.warning("只能上传一个文件!");
  // }

  handlePreview(file: any) {
    const Imgurl = file.response.data.previewUrl;
    window.open(Imgurl);
  }

  handleRemove(file: any, fileList: any) {
    var id: any = "";
    if (file.response.data.fileId) {
      id = file.response.data.fileId;
    } else {
      id = file.uid;
    }
    this.formParams.minIoFileList = this.formParams.minIoFileList.filter((item: any) => item.fileId != id);
  }
  onOk() {
    (this.$refs["jqForm"] as any).validate((valid: any) => {
      if (valid) {
        this.loading = true;
        this.onSubmit();
        setTimeout(() => {
          this.loading = false;
        }, 2000);
      } else {
        this.loading = false;
        return false;
      }
    });
  }
}
</script>
<style lang="scss" scoped>
$deep: "::v-deep";
::v-deep.el-dialog__wrapper {
  .el-dialog {
    .el-dialog__header {
      background-color: #5993fa;
    }
    .el-dialog__title {
      color: #fff;
    }
    .el-dialog__headerbtn .el-dialog__close {
      color: #fff;
    }
    .el-dialog__body {
      height: 570px;
      overflow-y: auto;
    }
    .el-dialog__footer {
      border-top: 1px solid #e8eaec;
    }
  }
}
@keyframes fade {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0px);
  }
}
.dialog-fade-enter-active {
  animation: fade 0.5s;
}
.dialog-fade-leave-active {
  animation: fade 0.5s reverse;
}

.form {
  display: flex;
  div {
    flex: 1;
    margin-right: 30px;
    padding: 2px 0px;
  }
}

#{$deep}.mySwitch {
  position: relative;
  left: -12%;
  .el-switch__label--left {
    position: relative;
    left: 55px;
    color: #fff;
    z-index: -1111;
    span {
      width: 25px;
      font-size: 12px;
    }
  }
  .el-switch__label--right {
    position: relative;
    right: 55px;
    color: #fff;
    z-index: -1111;
    span {
      display: inline-block;
      width: 25px;
      font-size: 12px;
    }
  }
  .el-switch__core {
    width: 50px !important;
  }
  .el-switch__label--right.is-active {
    z-index: 10;
    color: #fff !important;
  }
  .el-switch__label--left.is-active {
    z-index: 10;
    color: #838282 !important;
  }
}
</style>
